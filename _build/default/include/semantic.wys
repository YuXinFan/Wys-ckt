
(**Disabled expression in as_sec arg function **)

C = C whitespace t // type define


(**Enabled expression in as_sec arg function **)
as_sec_program  program =  program | program whitespace C1
C =   value  // value 
    | letin_binding 
    | if_then_branch 
    | if_then_else_branch 
    | match_expr
    | expr

letin_binding = let x = C1 in C2


if_then_branch = if bool_expr then C
if_then_else_branch = if bool_expr then C1 else C2

bool_expr = 
    | bool_condition
    | bool_expr bool_op bool_condition

bool_condition = 
    | x1 equality_op x2
    | b1

bool_op = and | or
equality_op = > | < | = 


arith_expr = value | value arith_op value | arith_expr arith_op value
arith_op = + | - | * | /

bool = true | false
value = x | n
var = x
const = n



//type circuitcheck: (fun _ -> Wys) -> unit 

